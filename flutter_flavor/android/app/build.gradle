def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def APP_NAME_APP1 = 'NewsAPP ONE'
def APP_NAME_APP2 = 'NewsAPP TWO'

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.vktech.flutter_flavor"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "app"

    productFlavors {
        app1 {
            dimension "app"
            applicationId "com.apricot.flutterdemo"
        }
        app2 {
            dimension "app"
            applicationId "com.apricot.flutterdemosecond"
        }
    }
    sourceSets {
        app1 {
            manifest.srcFile 'src/app1/AndroidManifest.xml'
        }
        app2 {
            manifest.srcFile 'src/app2/AndroidManifest.xml'
        }
    }
    applicationVariants.all { variant ->
        if (variant.name.startsWith("app1")) {
            if (variant.name.endsWith("Debug")) {
                variant.mergedFlavor.manifestPlaceholders.Placeholder_AppName = "DEV " + APP_NAME_APP1
            } else {
                variant.mergedFlavor.manifestPlaceholders.Placeholder_AppName = APP_NAME_APP1
            }
        } else if (variant.name.startsWith("app2")) {
            if (variant.name.endsWith("Debug")) {
                variant.mergedFlavor.manifestPlaceholders.Placeholder_AppName = "DEV " + APP_NAME_APP2
            } else {
                variant.mergedFlavor.manifestPlaceholders.Placeholder_AppName = APP_NAME_APP2
            }
        }
    }


    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}
